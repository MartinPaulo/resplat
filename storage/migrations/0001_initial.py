# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-10 05:48
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import storage.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Allocation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateField(blank=True, null=True)),
                ('created_by_id', models.IntegerField(blank=True, null=True)),
                ('updated_by_id', models.IntegerField(blank=True, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
                ('active_flag', models.BooleanField()),
                ('approval_date', models.DateField(blank=True, null=True)),
                ('ingested', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('size', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='size of allocation (GB)')),
                ('idm_identifier', models.CharField(blank=True, max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'applications_allocation',
            },
        ),
        migrations.CreateModel(
            name='CollectionProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateField(blank=True, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
                ('active_flag', models.BooleanField()),
                ('impact_of_loss', models.TextField(blank=True, null=True)),
                ('target_audience', models.TextField(blank=True, null=True)),
                ('current_size', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('estimated_growth', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('migration_assistance_required', models.BooleanField()),
                ('created_by_id', models.IntegerField(blank=True, null=True)),
                ('updated_by_id', models.IntegerField(blank=True, null=True)),
                ('merit_justification', models.TextField(blank=True, null=True)),
                ('estimated_final_size', models.DecimalField(blank=True, decimal_places=2, help_text='Esimated final size of collection in gigabytes', max_digits=15, null=True, verbose_name='estimated collection final size')),
            ],
            options={
                'db_table': 'applications_collectionprofile',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateField(blank=True, null=True)),
                ('created_by_id', models.IntegerField(blank=True, null=True)),
                ('updated_by_id', models.IntegerField(blank=True, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
                ('active_flag', models.BooleanField()),
                ('show_personal_contact_details', models.BooleanField()),
                ('show_mobile_number', models.BooleanField()),
                ('show_business_contact_details', models.BooleanField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('first_name', models.CharField(max_length=30, verbose_name='First name of contact')),
                ('last_name', models.CharField(max_length=30, verbose_name='Last name of contact')),
                ('phone_number', models.CharField(blank=True, max_length=30, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=30, null=True)),
                ('email_address', models.CharField(blank=True, max_length=75, null=True)),
                ('business_phone_number', models.CharField(blank=True, max_length=30, null=True)),
                ('business_email_address', models.CharField(blank=True, max_length=75, null=True)),
                ('orcid', models.URLField(blank=True, null=True, validators=[storage.models.validate_orcid], verbose_name='ORCID of contact')),
            ],
            options={
                'db_table': 'contacts_contact',
            },
        ),
        migrations.CreateModel(
            name='Custodian',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateField(blank=True, null=True)),
                ('created_by_id', models.IntegerField(blank=True, null=True)),
                ('updated_by_id', models.IntegerField(blank=True, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
                ('active_flag', models.BooleanField()),
            ],
            options={
                'db_table': 'applications_custodian',
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateField(blank=True, null=True)),
                ('created_by_id', models.IntegerField(blank=True, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
                ('updated_by_id', models.IntegerField(blank=True, null=True)),
                ('active_flag', models.BooleanField()),
                ('split', models.DecimalField(blank=True, decimal_places=4, default=0, help_text='Percentage split of the total allocation', max_digits=5, null=True, verbose_name='percentage split in decimal')),
            ],
            options={
                'db_table': 'applications_domain',
            },
        ),
        migrations.CreateModel(
            name='FieldOfResearch',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateField(blank=True, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
                ('active_flag', models.BooleanField()),
                ('created_by_id', models.IntegerField(blank=True, null=True)),
                ('updated_by_id', models.IntegerField(blank=True, null=True)),
                ('code', models.CharField(max_length=6, unique=True, verbose_name='for code')),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'applications_fieldofresearch',
            },
        ),
        migrations.CreateModel(
            name='Ingest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateField(blank=True, null=True)),
                ('created_by_id', models.IntegerField(blank=True, null=True)),
                ('updated_by_id', models.IntegerField(blank=True, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
                ('active_flag', models.BooleanField()),
                ('extraction_date', models.DateField()),
                ('allocated_capacity', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='allocated capacity in GB')),
                ('used_capacity', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='ingested capacity in GB')),
                ('used_replica', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15, null=True, verbose_name='replica ingested capacity in GB')),
            ],
            options={
                'db_table': 'applications_ingest',
            },
        ),
        migrations.CreateModel(
            name='IngestFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('completed', models.BooleanField()),
                ('file_source', models.CharField(choices=[('MON', 'Monash'), ('UOM', 'University of Melbourne')], max_length=3)),
                ('file_location', models.SmallIntegerField(choices=[(1, 'Clayton'), (2, 'Queensbury'), (3, 'Noble Park')])),
                ('file_type', models.CharField(choices=[('M', 'Market'), ('C', 'Computational'), ('V', 'Vault'), ('X', 'Mixed')], max_length=1)),
                ('extract_date', models.DateField(editable=False, verbose_name='Extract creation date')),
                ('file_name', models.URLField()),
            ],
            options={
                'db_table': 'ingest_ingestfile',
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateField(blank=True, null=True)),
                ('created_by_id', models.IntegerField(blank=True, null=True)),
                ('updated_by_id', models.IntegerField(blank=True, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
                ('active_flag', models.BooleanField()),
                ('value', models.CharField(max_length=250)),
                ('sequence_number', models.IntegerField(default=0)),
                ('application_flag', models.BooleanField(default=False)),
                ('group', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Label_Group', to='storage.Label')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Label_Parent', to='storage.Label')),
                ('parent_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Label_Parent_Type', to='storage.Label')),
            ],
            options={
                'db_table': 'labels_label',
            },
        ),
        migrations.CreateModel(
            name='LabelsAlias',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateField(blank=True, null=True)),
                ('created_by_id', models.IntegerField(blank=True, null=True)),
                ('updated_by_id', models.IntegerField(blank=True, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
                ('active_flag', models.BooleanField()),
                ('value', models.CharField(max_length=100, verbose_name='alias literal value')),
                ('label', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='aliased_label', to='storage.Label', verbose_name='aliased label')),
                ('source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='alias_source', to='storage.Label', verbose_name='alias source')),
            ],
            options={
                'db_table': 'labels_alias',
            },
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateField(blank=True, null=True)),
                ('created_by_id', models.IntegerField(blank=True, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
                ('updated_by_id', models.IntegerField(blank=True, null=True)),
                ('active_flag', models.BooleanField()),
                ('number_weekly_working_days', models.DecimalField(decimal_places=2, max_digits=5)),
                ('number_weekly_working_hours', models.DecimalField(decimal_places=2, max_digits=5)),
                ('operational_staff_petabyte', models.DecimalField(decimal_places=2, max_digits=5)),
                ('salary_overhead', models.DecimalField(decimal_places=4, max_digits=5)),
                ('weeks_of_annual_holiday', models.DecimalField(decimal_places=2, max_digits=5)),
                ('weeks_of_public_holiday', models.DecimalField(decimal_places=2, max_digits=5)),
                ('weeks_of_sick_leave', models.DecimalField(decimal_places=2, max_digits=5)),
                ('year_end', models.DateField(blank=True, null=True)),
                ('year_start', models.DateField(blank=True, null=True)),
                ('short_name', models.CharField(blank=True, max_length=20, null=True)),
                ('rifcs_email', models.TextField(blank=True, null=True, verbose_name='Notification Email Address')),
                ('ands_url', models.URLField(blank=True, null=True, verbose_name='ANDS Url')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='organisation_name', to='storage.Label')),
                ('operational_center', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='org_operational_center', to='storage.Label')),
                ('operational_staff_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='organisation_ops_role', to='storage.Label')),
            ],
            options={
                'db_table': 'contacts_organisation',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateField(blank=True, null=True)),
                ('created_by_id', models.IntegerField(blank=True, null=True)),
                ('updated_by_id', models.IntegerField(blank=True, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
                ('active_flag', models.BooleanField()),
                ('primary_data_source', models.TextField(blank=True, null=True)),
                ('overview', models.TextField(blank=True, null=True)),
                ('name', models.TextField(verbose_name='Collection Name')),
                ('rifcs_consent', models.BooleanField(default=False, verbose_name='Meta data available to sponsoring institution')),
                ('collective', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='collection_collective', to='storage.Label')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='collection_status', to='storage.Label')),
            ],
            options={
                'db_table': 'applications_project',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateField(blank=True, null=True)),
                ('created_by_id', models.IntegerField(blank=True, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
                ('active_flag', models.BooleanField()),
                ('data_management_solution', models.TextField(blank=True, null=True)),
                ('updated_by_id', models.IntegerField(blank=True, null=True)),
                ('estimated_duration', models.TextField(blank=True, null=True)),
                ('requested_start_date', models.DateField(blank=True, null=True)),
                ('code', models.CharField(max_length=15, verbose_name='application code')),
                ('application_form', models.URLField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('capital_funding_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='application_cap_funding_source', to='storage.Label')),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='application_institution', to='storage.Organisation', verbose_name='sponsoring institution')),
            ],
            options={
                'db_table': 'applications_request',
            },
        ),
        migrations.CreateModel(
            name='StorageProduct',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateField(blank=True, null=True)),
                ('created_by_id', models.IntegerField(blank=True, null=True)),
                ('updated_by_id', models.IntegerField(blank=True, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
                ('active_flag', models.BooleanField()),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('operational_cost', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('capacity', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('raw_conversion_factor', models.DecimalField(decimal_places=4, default=1, max_digits=6)),
                ('operational_center', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='storage_product_op_center', to='storage.Label')),
                ('product_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='storageproduct_name', to='storage.Label')),
                ('scheme', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='storageproduct_allocation_scheme', to='storage.Label')),
            ],
            options={
                'db_table': 'applications_storageproduct',
            },
        ),
        migrations.CreateModel(
            name='SubOrganization',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateField(blank=True, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
                ('active_flag', models.BooleanField()),
                ('created_by_id', models.IntegerField(blank=True, null=True)),
                ('updated_by_id', models.IntegerField(blank=True, null=True)),
                ('name', models.TextField(verbose_name='faculty')),
            ],
            options={
                'db_table': 'applications_suborganization',
            },
        ),
        migrations.AddField(
            model_name='request',
            name='institution_faculty',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='application_suborganization', to='storage.SubOrganization'),
        ),
        migrations.AddField(
            model_name='request',
            name='node',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Application_Node', to='storage.Label', verbose_name='target node'),
        ),
        migrations.AddField(
            model_name='request',
            name='operational_funding_source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='storage.Organisation'),
        ),
        migrations.AddField(
            model_name='request',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='storage.Project'),
        ),
        migrations.AddField(
            model_name='request',
            name='scheme',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='application_allocation_scheme', to='storage.Label', verbose_name='allocation scheme'),
        ),
        migrations.AddField(
            model_name='request',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='application_status', to='storage.Label', verbose_name='application status'),
        ),
        migrations.AddField(
            model_name='ingest',
            name='collection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='ingests', to='storage.Project'),
        ),
        migrations.AddField(
            model_name='ingest',
            name='storage_product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage.StorageProduct'),
        ),
        migrations.AddField(
            model_name='domain',
            name='collection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='domains', to='storage.Project'),
        ),
        migrations.AddField(
            model_name='domain',
            name='fieldofresearch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='domains', to='storage.FieldOfResearch', verbose_name='Field of Research'),
        ),
        migrations.AddField(
            model_name='custodian',
            name='collection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='custodians', to='storage.Project'),
        ),
        migrations.AddField(
            model_name='custodian',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='storage.Contact'),
        ),
        migrations.AddField(
            model_name='custodian',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='custodian_role', to='storage.Label', verbose_name='Custodian Role'),
        ),
        migrations.AddField(
            model_name='contact',
            name='organisation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contact_organisation', to='storage.Organisation'),
        ),
        migrations.AddField(
            model_name='contact',
            name='position',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contact_position', to='storage.Label', verbose_name='Organisation Position'),
        ),
        migrations.AddField(
            model_name='contact',
            name='title',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contact_title', to='storage.Label', verbose_name='Contact Title'),
        ),
        migrations.AddField(
            model_name='collectionprofile',
            name='anticipated_growth',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='collection_growth', to='storage.Label'),
        ),
        migrations.AddField(
            model_name='collectionprofile',
            name='collection',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='storage.Project'),
        ),
        migrations.AddField(
            model_name='collectionprofile',
            name='current_storage_medium',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='collection_storage_medium', to='storage.Label'),
        ),
        migrations.AddField(
            model_name='collectionprofile',
            name='estimated_annual_usage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='collection_usage', to='storage.Label'),
        ),
        migrations.AddField(
            model_name='collectionprofile',
            name='growth_estimate_period',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='collection_growth_period', to='storage.Label'),
        ),
        migrations.AddField(
            model_name='collectionprofile',
            name='user_access_frequency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='collection_access_frequency', to='storage.Label'),
        ),
        migrations.AddField(
            model_name='collectionprofile',
            name='user_interaction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='collection_user_interaction', to='storage.Label'),
        ),
        migrations.AddField(
            model_name='allocation',
            name='application',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='allocations', to='storage.Request'),
        ),
        migrations.AddField(
            model_name='allocation',
            name='collection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='allocations', to='storage.Project'),
        ),
        migrations.AddField(
            model_name='allocation',
            name='idm_domain',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='allocation_idm_domain', to='storage.Label'),
        ),
        migrations.AddField(
            model_name='allocation',
            name='operational_center',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='allocation_op_center', to='storage.Label'),
        ),
        migrations.AddField(
            model_name='allocation',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='allocation_site', to='storage.Label'),
        ),
        migrations.AddField(
            model_name='allocation',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='allocation_status', to='storage.Label', verbose_name='allocation status'),
        ),
        migrations.AddField(
            model_name='allocation',
            name='storage_product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='allocations', to='storage.StorageProduct'),
        ),
    ]
